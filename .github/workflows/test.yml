name: Test
on:
  pull_request: {}
  push: {}
  workflow_dispatch: {}

jobs:
  # verify-build:
  #   name: Verify build

  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10"]
  #       os: [macos-latest, windows-latest]

  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Set up poetry
  #       uses: abatilo/actions-poetry@v2.0.0

  #     - name: Install project dependencies
  #       run: |
  #         poetry export -f "requirements.txt" -o "requirements.txt" --dev
  #         python3 -m venv venv

  #         venv/bin/pip install -r requirements.txt

  #     - name: Run non-integration tests
  #       run: |
  #         venv/bin/pytest --ignore=tests/test_integration.py

  run-tests:
    name: Run tests

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]

    services:
      opensearch:
        image: opensearchproject/opensearch:latest
        options: -e "cluster.name=opensearch-cluster" -e "node.name=opensearch" -e "discovery.type=single-node" -e "bootstrap.memory_lock=true"
        ports:
          - "9200:9200"

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Install project dependencies
        run: |
          poetry export -f "requirements.txt" -o "requirements.txt" --dev
          python3 -m venv venv
          ./venv/bin/pip install -r requirements.txt

      - name: Run mypy
        env:
          TEST_OPENSEARCH_HOST: "https://localhost:9200"
        run: |
          ./venv/bin/mypy opensearch_logger --strict

      - name: Run flake8
        run: |
          ./venv/bin/flake8 opensearch_logger

      - name: Run tests with code coverage
        env:
          TEST_OPENSEARCH_HOST: "https://localhost:9200"
        run: |
          ./venv/bin/pytest --cov --cov-report=xml

      - name: Upload coverage results to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          bash <(curl -s https://codecov.io/bash)
        if: matrix.python-version == '3.8'
