name: Test
on:
  pull_request: {}
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: "0 1 * * *"

jobs:
  export-requirements:
    name: Export requirements
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Export project dependencies
        run: poetry export -f "requirements.txt" -o "requirements.txt" --dev --without-hashes

      - name: Save exported requirements.txt
        uses: actions/upload-artifact@v3
        with:
          name: requirements
          path: requirements.txt

  run-tests:
    name: Run tests
    needs: export-requirements

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        # Service containers are only available on ubuntu-latest
        # os: [ubuntu-latest, macos-latest, windows-latest]

    services:
      opensearch:
        image: opensearchproject/opensearch:latest
        options: -e "cluster.name=opensearch-cluster" -e "node.name=opensearch" -e "discovery.type=single-node" -e "bootstrap.memory_lock=true"
        ports:
          - "9200:9200"

    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download exported requirements.txt
        uses: actions/download-artifact@v3
        with:
          name: requirements

      - name: Install package dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        env:
          TEST_OPENSEARCH_HOST: "https://localhost:9200"
        run: python -m pytest -x --cov --cov-report=xml

      - name: Save coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.xml
        if: matrix.python-version == '3.8' && matrix.os == 'ubuntu-latest'

      - name: Run mypy
        env:
          TEST_OPENSEARCH_HOST: "https://localhost:9200"
        run: python -m mypy opensearch_logger --strict

      - name: Run flake8
        run: python -m flake8 opensearch_logger

  measure-coverage:
    name: Measure coverage
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage results
        uses: actions/download-artifact@v3
        with:
          name: coverage

      - name: Upload coverage results to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
